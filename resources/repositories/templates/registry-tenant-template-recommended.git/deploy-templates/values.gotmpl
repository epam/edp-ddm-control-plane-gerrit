#helm values
namespace: {{ requiredEnv "NAMESPACE" }}
dnsWildcard: {{ requiredEnv "dnsWildcard" }}
cdPipelineName: {{ requiredEnv "NAMESPACE" }}
cloudProvider: {{ env "cloudProvider" }}
cluster_prefix: {{ exec "oc" (list "get" "infrastructure" "cluster" "--no-headers" "-o" "jsonpath='{.status.infrastructureName}'") }}
globalEDPProject: {{ env "globalEDPProject" }}
baseDomain: {{ env "baseDomain" }}

dockerRegistry: '{{ env "edpComponentDockerRegistryUrl" }}'
dockerProxyRegistry: '{{ env "dockerProxyRegistry" }}'
edpProject: '{{ env "edpProject" }}'
stageName: '{{ env "stageName" }}'

global:
  imageRegistry: '{{ env "dockerProxyRegistry" }}'
  storageClass: ocs-storagecluster-ceph-rbd
  nexus:
    administrators: {}
    readers: {}
  jenkins:
    administrators: []
  gerrit:
    administrators: []
  kafkaOperator:
    kafkaBrokers: 3
    zookeepers: 3
    replicationFactor: 3
    kafkaCentralNamespace: {{ env "KAFKA_CENTRAL_NAMESPACE" }}
  crunchyPostgresOperator:
    instances:
      operational:
        replicas: 1
      analytical:
        replicas: 1
    minioConf:
      endpoint: {{ env "MINIO_ENDPOINT" }}
      bucketName: {{ env "MINIO_BUCKET_NAME" }}
  redisSentinel:
    redis:
      replicas: 3
    sentinel:
      replicas: 3
  notifications:
    email:
      password: '{{ env "smtpExternalUserPassword" | b64enc }}'
  registry:
    kong:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 600m
              memory: 512Mi
            limits:
              cpu: 600m
              memory: 512Mi
      container:
        resources:
          limits:
            cpu: 300m
            memory: 1Gi
          requests:
            cpu: 300m
            memory: 1Gi
    bpms:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: '1'
            memory: 2Gi
          requests:
            cpu: '1'
            memory: 2Gi
        envVars:
          JAVA_OPTS: "-Xms1536m -Xmx1536m -Duser.timezone=UTC"
    digitalSignatureOps:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: '1'
            memory: 1Gi
          requests:
            cpu: '1'
            memory: 1Gi
        envVars:
          JAVA_OPTS: "-Xms768m -Xmx768m -Duser.timezone=UTC"
    userTaskManagement:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: 500m
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 768Mi
        envVars:
          JAVA_OPTS: "-Xms512m -Xmx512m"
    userProcessManagement:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: 500m
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 768Mi
        envVars:
          JAVA_OPTS: "-Xms512m -Xmx512m"
    formManagementProvider:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 512Mi
    digitalDocumentService:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: 500m
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 768Mi
        envVars:
          JAVA_OPTS: "-Xms512m -Xmx512m"
    restApi:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: '1'
            memory: 2Gi
          requests:
            cpu: '1'
            memory: 2Gi
        envVars:
          JAVA_OPTS: "-Xms1200m -Xmx1200m -XX:+AlwaysPreTouch -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent"
    kafkaApi:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: '1'
            memory: 2Gi
          requests:
            cpu: '1'
            memory: 2Gi
        envVars:
          JAVA_OPTS: "-Xms1200m -Xmx1200m -XX:+AlwaysPreTouch -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent"
    soapApi:
      istio:
        sidecar:
          enabled: true
          resources:
            requests:
              cpu: 350m
              memory: 128Mi
            limits:
              cpu: 350m
              memory: 128Mi
      container:
        resources:
          limits:
            cpu: 300m
            memory: 600Mi
          requests:
            cpu: 300m
            memory: 600Mi
        envVars:
          JAVA_OPTS: "-Xms128m -Xmx128m -XX:+AlwaysPreTouch -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent"

gerritCentralUrl: gerrit.{{ env "globalEDPProject" }}.svc:{{ env "libGerritSshPort" }}

storageClass: ocs-storagecluster-ceph-rbd
nexus:
  storage:
    class: ocs-storagecluster-ceph-rbd
  edpMavenRepoUrl: {{ env "edpMavenRepoUrl" }}

commonWebApp:
  businessProcessModelerExtensionsVersion: 1.8.0.11

jenkins:
  edpComponentDockerRegistryrepoURL: '{{ env "edpComponentDockerRegistryUrl" }}'
{{- if eq (env "envType") "target" }}
  sharedLibraries:
    edp-library-stages:
      url: ssh://jenkins@gerrit.{{ env "globalEDPProject" }}.svc:{{ env "libGerritSshPort" }}/{{ env "sharedStagesPath" }}
      secret: {{ env "libGerritCredId" }}
    edp-library-pipelines:
      url: ssh://jenkins@gerrit.{{ env "globalEDPProject" }}.svc:{{ env "libGerritSshPort" }}/{{ env "sharedPipelinesPath" }}
      secret: {{ env "libGerritCredId" }}
{{- end }}

{{ $centralVaultUrl := exec "oc" (list "get" "Secret" "-n" (env "globalEDPProject") "vault-root-access-token" "--no-headers" "-o" "jsonpath={.data.vaultUrl}") }}
vault:
  platformVaultToken: {{ env "platformVaultToken" }}
  openshiftApiUrl: {{ env "openshiftApiUrl" }}
  centralVaultUrl: {{ b64dec $centralVaultUrl }}
  server:
    dataStorage:
      storageClass: ocs-storagecluster-ceph-rbd
    auditStorage:
      storageClass: ocs-storagecluster-ceph-rbd

s3:
  config:
    client:
      protocol: http
    options:
      pathStyleAccess: true

platform:
  security:
    csrf:
      enabled: true

instance_count_per_region: "5"

cdPipelineName: {{ env "cdPipelineName" }}
{{ $cdPipelineStageName := "main" }}
cdPipelineStageName: {{ $cdPipelineStageName }}

{{- if eq (env "envType") "target" }}
codebases:
  registryRegulations:
    historyExcerptorUrl: https://gerrit-{{ env "globalEDPProject" }}-platform-{{ $cdPipelineStageName }}.{{ requiredEnv "dnsWildcard" }}/components/runtime/history-excerptor-chart
    referenceRepoUrl: https://gerrit-{{ env "globalEDPProject" }}-platform-{{ $cdPipelineStageName }}.{{ requiredEnv "dnsWildcard" }}/empty-template-registry-regulation
{{- end }}

#TODO: remove if after property will be merged
trembitaExchangeGateway:
  url: https://trembita-edr-registry-mock.{{ env "dnsWildcard" }}/mockEDRService
#TODO end
keycloak:
  host: platform-keycloak.{{ requiredEnv "dnsWildcard" }}
  url: https://platform-keycloak.{{ requiredEnv "dnsWildcard" }}
  ssoRealm:
    autoRedirectEnabled: {{ env "autoRedirectEnabled" }}

gerritCentralUrl: ssh://jenkins@gerrit.{{ env "globalEDPProject" }}.svc:{{ env "libGerritSshPort" }}
