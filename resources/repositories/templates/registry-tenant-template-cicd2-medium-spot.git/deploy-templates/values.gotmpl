#helm values
namespace: {{ requiredEnv "NAMESPACE" }}
dnsWildcard: {{ requiredEnv "dnsWildcard" }}
cdPipelineName: {{ requiredEnv "NAMESPACE" }}
cloudProvider: {{ env "cloudProvider" }}
cluster_prefix: {{ exec "oc" (list "get" "infrastructure" "cluster" "--no-headers" "-o" "jsonpath='{.status.infrastructureName}'") }}
globalEDPProject: {{ env "globalEDPProject" }}

dockerRegistry: '{{ env "edpComponentDockerRegistryUrl" }}'
dockerProxyRegistry: '{{ env "dockerProxyRegistry" }}'
edpProject: '{{ env "edpProject" }}'
stageName: '{{ env "stageName" }}'

global:
  imageRegistry: '{{ env "dockerProxyRegistry" }}'
  storageClass: ocs-storagecluster-ceph-rbd
  nexus:
    administrators: {}
    readers: {}
  jenkins:
    administrators: []
  gerrit:
    administrators: []
  kafkaOperator:
    kafkaBrokers: 1
    zookeepers: 1
    replicationFactor: 1
    kafkaCentralNamespace: {{ env "KAFKA_CENTRAL_NAMESPACE" }}
    storage:
      zookeeper:
        size: 5Gi
      kafka:
        size: 20Gi
  crunchyPostgresOperator:
    instances:
      operational:
        replicas: 1
      analytical:
        replicas: 1
    minioConf:
      endpoint: {{ env "MINIO_ENDPOINT" }}
      bucketName: {{ env "MINIO_BUCKET_NAME" }}
  redisSentinel:
    redis:
      replicas: 3
    sentinel:
      replicas: 3
  notifications:
    email:
      password: '{{ env "smtpExternalUserPassword" | b64enc }}'
    diia:
      url: https://api2t.diia.gov.ua/
      partner:
        token: {{ exec "oc" (list "-n" "mdtu-ddm-edp-cicd" "get" "secret" "diia-partner-token" "-o" "jsonpath={.data.token}") | b64dec }}
  disableRequestsLimits: true

gerritCentralUrl: gerrit.{{ env "globalEDPProject" }}.svc:{{ env "libGerritSshPort" }}

storageClass: ocs-storagecluster-ceph-rbd
nexus:
  storage:
    class: ocs-storagecluster-ceph-rbd
  edpMavenRepoUrl: {{ env "edpMavenRepoUrl" }}

commonWebApp:
  businessProcessModelerExtensionsVersion: 1.8.0.11

keycloak:
  host: platform-keycloak.{{ requiredEnv "dnsWildcard" }}
  url: https://platform-keycloak.{{ requiredEnv "dnsWildcard" }}
  ssoRealm:
    autoRedirectEnabled: {{ env "autoRedirectEnabled" }}

jenkins:
  edpComponentDockerRegistryrepoURL: '{{ env "edpComponentDockerRegistryUrl" }}'
{{- if eq (env "envType") "target" }}
  sharedLibraries:
    edp-library-stages:
      url: ssh://jenkins@gerrit.{{ env "globalEDPProject" }}.svc:{{ env "libGerritSshPort" }}/{{ env "sharedStagesPath" }}
      secret: {{ env "libGerritCredId" }}
    edp-library-pipelines:
      url: ssh://jenkins@gerrit.{{ env "globalEDPProject" }}.svc:{{ env "libGerritSshPort" }}/{{ env "sharedPipelinesPath" }}
      secret: {{ env "libGerritCredId" }}
{{- end }}

cdPipelineName: {{ env "cdPipelineName" }}
cdPipelineStageName: main

vault:
  platformVaultToken: {{ env "platformVaultToken" }}
  openshiftApiUrl: {{ env "openshiftApiUrl" }}
  centralVaultUrl: https://platform-vault-cicd2.mdtu-ddm.projects.epam.com:8200
  server:
    dataStorage:
      storageClass: ocs-storagecluster-ceph-rbd
    auditStorage:
      storageClass: ocs-storagecluster-ceph-rbd

s3:
  config:
    client:
      protocol: http
      signerOverride: S3SignerType
    options:
      pathStyleAccess: true

platform:
  security:
    csrf:
      enabled: false

instance_count_per_region: "1"
